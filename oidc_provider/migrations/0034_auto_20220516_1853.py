# Generated by Django 3.2.7 on 2022-05-16 18:53

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('oidc_provider', '0033_auto_20220422_1916'),
    ]

    operations = [
        migrations.AlterField(
            model_name='client',
            name='at_jwe_alg',
            field=models.CharField(choices=[('RSA-OAEP', '(RSA-OAEP) RSAES OAEP using default parameters'), ('RSA-OAEP-256', '(RSA-OAEP-256) RSAES OAEP using SHA-256 and MGF1 with SHA-256'), ('A128KW', '(A128KW) AES Key Wrap with default initial value using 128 bit key'), ('A192KW', '(A192KW) AES Key Wrap with default initial value using 192 bit key'), ('A256KW', '(A256KW) AES Key Wrap with default initial value using 256 bit key'), ('dir', 'Direct use of a shared symmetric key as the CEK'), ('ECDH-ES', 'Elliptic Curve Diffie-Hellman Ephemeral Static key agreement using Concat KDF'), ('ECDH-ES+A128KW', 'ECDH-ES using Concat KDF and CEK wrapped with A128KW'), ('ECDH-ES+A192KW', 'ECDH-ES using Concat KDF and CEK wrapped with A192KW'), ('ECDH-ES+A256KW', 'ECDH-ES using Concat KDF and CEK wrapped with A256KW'), ('A128GCMKW', 'Key wrapping with AES GCM using 128 bit key'), ('A192GCMKW', 'Key wrapping with AES GCM using 192 bit key'), ('A256GCMKW', 'Key wrapping with AES GCM using 256 bit key'), ('PBES2-HS256+A128KW', 'PBES2 with HMAC SHA-256 and A128KW wrapping'), ('PBES2-HS384+A192KW', 'PBES2 with HMAC SHA-384 and A192KW wrapping'), ('PBES2-HS512+A256KW', 'PBES2 with HMAC SHA-512 and A256KW wrapping')], default=None, help_text='Algorithm used to encrypt Access Token.', max_length=18, null=True, verbose_name='JWE Algorithm to Encrypt'),
        ),
        migrations.AlterField(
            model_name='client',
            name='idtoken_jwe_alg',
            field=models.CharField(choices=[('RSA-OAEP', '(RSA-OAEP) RSAES OAEP using default parameters'), ('RSA-OAEP-256', '(RSA-OAEP-256) RSAES OAEP using SHA-256 and MGF1 with SHA-256'), ('A128KW', '(A128KW) AES Key Wrap with default initial value using 128 bit key'), ('A192KW', '(A192KW) AES Key Wrap with default initial value using 192 bit key'), ('A256KW', '(A256KW) AES Key Wrap with default initial value using 256 bit key'), ('dir', 'Direct use of a shared symmetric key as the CEK'), ('ECDH-ES', 'Elliptic Curve Diffie-Hellman Ephemeral Static key agreement using Concat KDF'), ('ECDH-ES+A128KW', 'ECDH-ES using Concat KDF and CEK wrapped with A128KW'), ('ECDH-ES+A192KW', 'ECDH-ES using Concat KDF and CEK wrapped with A192KW'), ('ECDH-ES+A256KW', 'ECDH-ES using Concat KDF and CEK wrapped with A256KW'), ('A128GCMKW', 'Key wrapping with AES GCM using 128 bit key'), ('A192GCMKW', 'Key wrapping with AES GCM using 192 bit key'), ('A256GCMKW', 'Key wrapping with AES GCM using 256 bit key'), ('PBES2-HS256+A128KW', 'PBES2 with HMAC SHA-256 and A128KW wrapping'), ('PBES2-HS384+A192KW', 'PBES2 with HMAC SHA-384 and A192KW wrapping'), ('PBES2-HS512+A256KW', 'PBES2 with HMAC SHA-512 and A256KW wrapping')], default='A128KW', help_text='Algorithm used to encrypt ID Tokens.', max_length=18, null=True, verbose_name='JWE Algorithm to Encrypt'),
        ),
        migrations.AlterField(
            model_name='client',
            name='rt_jwe_alg',
            field=models.CharField(choices=[('RSA-OAEP', '(RSA-OAEP) RSAES OAEP using default parameters'), ('RSA-OAEP-256', '(RSA-OAEP-256) RSAES OAEP using SHA-256 and MGF1 with SHA-256'), ('A128KW', '(A128KW) AES Key Wrap with default initial value using 128 bit key'), ('A192KW', '(A192KW) AES Key Wrap with default initial value using 192 bit key'), ('A256KW', '(A256KW) AES Key Wrap with default initial value using 256 bit key'), ('dir', 'Direct use of a shared symmetric key as the CEK'), ('ECDH-ES', 'Elliptic Curve Diffie-Hellman Ephemeral Static key agreement using Concat KDF'), ('ECDH-ES+A128KW', 'ECDH-ES using Concat KDF and CEK wrapped with A128KW'), ('ECDH-ES+A192KW', 'ECDH-ES using Concat KDF and CEK wrapped with A192KW'), ('ECDH-ES+A256KW', 'ECDH-ES using Concat KDF and CEK wrapped with A256KW'), ('A128GCMKW', 'Key wrapping with AES GCM using 128 bit key'), ('A192GCMKW', 'Key wrapping with AES GCM using 192 bit key'), ('A256GCMKW', 'Key wrapping with AES GCM using 256 bit key'), ('PBES2-HS256+A128KW', 'PBES2 with HMAC SHA-256 and A128KW wrapping'), ('PBES2-HS384+A192KW', 'PBES2 with HMAC SHA-384 and A192KW wrapping'), ('PBES2-HS512+A256KW', 'PBES2 with HMAC SHA-512 and A256KW wrapping')], default=None, help_text='Algorithm used to encrypt Refresh Token.', max_length=18, null=True, verbose_name='JWE Algorithm to Encrypt'),
        ),
        migrations.AlterField(
            model_name='responsetype',
            name='value',
            field=models.CharField(choices=[('none', 'none (Authorization None Flow)'), ('code', 'code (Authorization Code Flow)'), ('token', 'token (Authorization Token Flow)'), ('id_token', 'id_token (Implicit Flow)'), ('id_token token', 'id_token token (Implicit Flow)'), ('code token', 'code token (Hybrid Flow)'), ('code id_token', 'code id_token (Hybrid Flow)'), ('code id_token token', 'code id_token token (Hybrid Flow)')], max_length=30, unique=True, verbose_name='Response Type Value'),
        ),
    ]
